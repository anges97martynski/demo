{"version":3,"sources":["reportWebVitals.js","ThreeScene.js","TopNavigationMenu.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ThreeScene","normalTexture","THREE","load","canvas","document","querySelector","scene","geometry","material","roughness","metalness","normalMap","color","sphere","add","pointLight1","position","x","y","z","pointLight2","set","intensity","pointLight3","sizes","width","window","innerWidth","height","innerHeight","addEventListener","camera","aspect","updateProjectionMatrix","renderer","setSize","setPixelRatio","Math","min","devicePixelRatio","alpha","controls","FirstPersonControls","domElement","movementSpeed","lookSpeed","lookVertical","event","mouseX","clientX","windowX","mouseY","clientY","windowY","targetX","targetY","scrollY","clock","tick","elapsedTime","getElapsedTime","rotation","update","getDelta","render","requestAnimationFrame","ref","mount","Component","SubMenu","Menu","TopNavigationMenu","state","current","handleClick","e","console","log","setState","key","this","onClick","selectedKeys","mode","Item","icon","MailOutlined","disabled","AppstoreOutlined","SettingOutlined","title","ItemGroup","href","target","rel","React","App","ReactDOM","getElementById","placeholder","onKeyDown","stopPropagation"],"mappings":"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","file":"static/js/main.c603f76c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\r\nimport * as THREE from 'three';\r\nimport { FirstPersonControls } from 'three/examples/jsm/controls/FirstPersonControls.js';\r\n//import { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls.js';\r\n\r\nclass ThreeScene extends Component {\r\n  componentDidMount() {\r\n\r\n    // Loading \r\n    const textureLoader = new THREE.TextureLoader()\r\n    const normalTexture = textureLoader.load('./NormalMap.png')\r\n\r\n    // Canvas --> is used to draw the graphics on the browser\r\n    const canvas = document.querySelector('canvas.webgl')\r\n\r\n    //Scene\r\n    const scene = new THREE.Scene();\r\n\r\n    // Objects --> is used to define the shape of the model\r\n    const geometry = new THREE.SphereBufferGeometry(.5, 64, 64);\r\n\r\n    // Materials --> defines the appearance of the model\r\n    const material = new THREE.MeshStandardMaterial();\r\n    material.roughness = 0.2;\r\n    material.metalness = 0.7;\r\n    material.normalMap = normalTexture;\r\n    material.color = new THREE.Color(0x292929)\r\n\r\n    // Mesh --> a mesh is a visual element in a scene, it's a 3D object that make up a triangular polygon\r\n    const sphere = new THREE.Mesh(geometry, material)\r\n    scene.add(sphere);\r\n\r\n    /**\r\n     * Lights\r\n     */\r\n\r\n    // Light 1\r\n    const pointLight1 = new THREE.PointLight(0xffffff, 0.1)\r\n    pointLight1.position.x = 2\r\n    pointLight1.position.y = 3\r\n    pointLight1.position.z = 4\r\n\r\n    scene.add(pointLight1)\r\n\r\n    // Light 2\r\n    const pointLight2 = new THREE.PointLight(0xff0000, 2)\r\n    pointLight2.position.set(-1.86, 1, -1.65) //x,y,z\r\n    pointLight2.intensity = 10\r\n\r\n    scene.add(pointLight2)\r\n\r\n    // Light 3\r\n    const pointLight3 = new THREE.PointLight(0xe1ff, 2)\r\n    pointLight3.position.set(2.13, -3, -1.98) //x,y,z\r\n    pointLight3.intensity = 6.8\r\n\r\n    scene.add(pointLight3)\r\n\r\n    /**\r\n     * Sizes\r\n     */\r\n    const sizes = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight\r\n    }\r\n\r\n    window.addEventListener('resize', () => {\r\n      // Update sizes\r\n      sizes.width = window.innerWidth\r\n      sizes.height = window.innerHeight\r\n\r\n      // Update camera\r\n      camera.aspect = sizes.width / sizes.height\r\n      camera.updateProjectionMatrix()\r\n\r\n      // Update renderer\r\n      renderer.setSize(sizes.width, sizes.height)\r\n      renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\r\n    })\r\n\r\n    // Camera\r\n    const camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height, 0.1, 100)\r\n    camera.position.x = 0\r\n    camera.position.y = 0\r\n    camera.position.z = 2\r\n    scene.add(camera)\r\n\r\n    /**\r\n     * Renderer\r\n     */\r\n    const renderer = new THREE.WebGLRenderer({\r\n      canvas: canvas,\r\n      alpha: true\r\n    });\r\n    renderer.setSize(sizes.width, sizes.height)\r\n    //this.mount.appendChild( renderer.domElement );\r\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\r\n\r\n    /**\r\n     * Controls\r\n     */\r\n\r\n    const controls = new FirstPersonControls(camera, renderer.domElement);\r\n\r\n    controls.movementSpeed = 1000;\r\n    controls.lookSpeed = 0.125;\r\n    controls.lookVertical = true;\r\n\r\n\r\n    // const controls = new PointerLockControls( camera, renderer.domElement );\r\n\r\n    // const btn1 = document.querySelector(\"#button1\");\r\n    // btn1.addEventListener('click', () => {\r\n    //   controls.lock();\r\n    // });\r\n\r\n    // controls.addEventListener('lock',()=>{\r\n    //   btn1.innerHTML = \"Unlocked\";\r\n    // });\r\n\r\n    // controls.addEventListener('unlock',()=>{\r\n    //   btn1.innerHTML = \"Locked\";\r\n    // });    \r\n\r\n    // const keyboard = [];\r\n\r\n    // document.addEventListener('keydown', (e) => {\r\n    //   keyboard[e.key] = true;\r\n    // });\r\n\r\n    // document.addEventListener('keyup', (e) => {\r\n    //   keyboard[e.key] = false;\r\n    // });\r\n\r\n    // function processKeyboard(delta) {\r\n    //   const speed = 50;\r\n    //   const actualSpeed = speed * delta;\r\n    //   if (keyboard['w']){\r\n    //     controls.moveForward(actualSpeed);\r\n    //   }\r\n\r\n    //   if (keyboard['s']){\r\n    //     controls.moveForward(-actualSpeed);\r\n    //   }\r\n\r\n    //   if (keyboard['a']){\r\n    //     controls.moveRight(actualSpeed);\r\n    //   }\r\n\r\n    //   if (keyboard['d']){\r\n    //     controls.moveRight(-actualSpeed);\r\n    //   }\r\n\r\n    // }    \r\n\r\n    /**\r\n     * Animate\r\n     */\r\n\r\n    document.addEventListener('mousemove', onDocumentMouseMove)\r\n\r\n    let mouseX = 0\r\n    let mouseY = 0\r\n\r\n    let targetX = 0\r\n    let targetY = 0\r\n\r\n    const windowX = window.innerWidth / 2;\r\n    const windowY = window.innerHeight / 2;\r\n\r\n    function onDocumentMouseMove(event) {\r\n      mouseX = (event.clientX - windowX)\r\n      mouseY = (event.clientY - windowY)\r\n    }\r\n\r\n    const updateSphere = (event) => {\r\n      sphere.position.y = window.scrollY * .001\r\n    }\r\n\r\n    // const disabledFirstPersonControls = (event) => {\r\n    //   controls.enabled = false;\r\n    // }\r\n\r\n    // window.addEventListener('click', disabledFirstPersonControls);\r\n\r\n    window.addEventListener('scroll', updateSphere);\r\n\r\n    const clock = new THREE.Clock()\r\n\r\n    const tick = () => {\r\n\r\n      targetX = mouseX * .001\r\n      targetY = mouseY * .001\r\n\r\n      const elapsedTime = clock.getElapsedTime()\r\n\r\n      // Update objects\r\n      sphere.rotation.y = .5 * elapsedTime\r\n\r\n      sphere.rotation.y += .5 * (targetX - sphere.rotation.y)\r\n      sphere.rotation.x += .05 * (targetY - sphere.rotation.x)\r\n      sphere.position.z += -.05 * (targetY - sphere.rotation.x)\r\n\r\n      // Update Orbital Controls\r\n      controls.update(clock.getDelta())\r\n\r\n\r\n      // Render\r\n      renderer.render(scene, camera)\r\n\r\n      //processKeyboard(clock.getDelta());\r\n\r\n      // Call tick again on the next frame\r\n      window.requestAnimationFrame(tick)\r\n\r\n    }\r\n\r\n    tick()\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        ref={ref => (this.mount = ref)}\r\n      >\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThreeScene;","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Menu } from 'antd';\r\nimport { MailOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass TopNavigationMenu extends React.Component {\r\n  state = {\r\n    current: 'mail',\r\n  };\r\n\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n    this.setState({ current: e.key });\r\n  };\r\n\r\n  render() {\r\n    const { current } = this.state;\r\n      \r\n      return (\r\n\r\n        <Menu onClick={this.handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n          <Menu.Item key=\"mail\" icon={<MailOutlined />}>\r\n            Navigation One\r\n          </Menu.Item>\r\n          <Menu.Item key=\"app\" disabled icon={<AppstoreOutlined />}>\r\n            Navigation Two\r\n          </Menu.Item>\r\n          <SubMenu key=\"SubMenu\" icon={<SettingOutlined />} title=\"Navigation Three - Submenu\">\r\n            <Menu.ItemGroup title=\"Item 1\">\r\n              <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n              <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\r\n            </Menu.ItemGroup>\r\n            <Menu.ItemGroup title=\"Item 2\">\r\n              <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\r\n              <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\r\n            </Menu.ItemGroup>\r\n          </SubMenu>\r\n          <Menu.Item key=\"alipay\">\r\n            <a href=\"https://ant.design\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Navigation Four - Link\r\n            </a>\r\n          </Menu.Item>\r\n        </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopNavigationMenu;\r\n","import React, {Fragment} from 'react';\nimport ReactDOM from 'react-dom';\n//import 'antd/dist/antd.css'; \nimport './index.css';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ThreeScene from './ThreeScene';\nimport TopNavigationMenu from './TopNavigationMenu';\nimport { Input } from 'antd';\n\nfunction App() {\n  return (\n    <Fragment>\n      <div>       \n        <ThreeScene />\n        </div>\n    </Fragment>\n  );\n} \n\nReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<TopNavigationMenu />, document.getElementById('container'));\nReactDOM.render(<Input placeholder=\"Basic usage\" onKeyDown={e => e.stopPropagation()} />, document.getElementById('input'));\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}